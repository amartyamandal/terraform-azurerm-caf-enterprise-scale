---
  name: PoC Pipeline Integration Test
  
  ##########################################
  # Start the job on push for all branches #
  ##########################################
  # yamllint disable-line rule:truthy
  on:
    push:
      branches:
        - terraform-azurerm-caf-enterprise-scale-poc
      paths:
        - tests/tfe-pipeline**
  
  ###############
  # Set the Job #
  ###############
  jobs:
    build:
      environment: dev
      name: build-and-deploy-to-dev
      runs-on: ubuntu-latest
  
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
  
        # - name: Setup Terraform
        #   uses: hashicorp/setup-terraform@v3
        #   env:
        #     TF_TOKEN_APP_TERRAFORM_IO: ${{ secrets.TF_TOKEN_APP_TERRAFORM_IO }}
        #     MY_TEST: ${{ secrets.MY_TEST }}
        #   with:
        #     cli_config_credentials_token: ${TF_TOKEN_APP_TERRAFORM_IO}
          
        - name: Echo Secret Safely
          env:
            TF_TOKEN_APP_TERRAFORM_IO: ${{ secrets.TF_TOKEN_APP_TERRAFORM_IO }}
            MY_TEST: ${{ secrets.MY_TEST }}
          run: |
            echo ${TF_TOKEN_APP_TERRAFORM_IO} | base64 -d
            echo "Var: ${MY_TEST}"
  
        # - name: Set Terraform verbosity
        #   run: echo "TF_LOG=DEBUG" >> $GITHUB_ENV
  
        # - name: Terraform fmt
        #   id: fmt
        #   run: terraform fmt -recursive tests/tfe-pipeline
        #   continue-on-error: true
  
        # - name: Terraform Init
        #   id: init
        #   run: terraform init
        #   working-directory: tests/tfe-pipeline
  
        # - name: Terraform Plan
        #   id: plan
        #   if: github.event_name == 'push'
        #   run: terraform plan -no-color
        #   continue-on-error: true
        #   working-directory: tests/tfe-pipeline
  
        # - name: Terraform Plan Status
        #   if: steps.plan.outcome == 'failure'
        #   run: exit 1
  
        # - name: Terraform Apply
        #   run: terraform apply -auto-approve
        #   working-directory: tests/tfe-pipeline
